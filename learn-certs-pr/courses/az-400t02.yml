### YamlMime:Course
title: Implementing Continuous Integration
metadata:
  title: 'Course AZ-400T02-A: Implementing Continuous Integration'
  description: 'Course AZ-400T02-A: Implementing Continuous Integration'
uid: course.az-400t02
courseNumber: 'AZ-400T02-A'
hoursToComplete: 24
iconUrl: /media/learn/certification/course.svg
skillsGained:
- skill: 継続的統合が重要な理由について説明する
- skill: Azure DevOps を使用して継続的な統合を実装する
- skill: ビルドと利用可能なオプションを構成する
- skill: 自動ビルド ワークフローを作成する
- skill: 他のビルド ツールを Azure DevOps と統合する
- skill: ハイブリッド ビルド プロセスを作成する
- skill: コード品質の意味とその測定方法を説明する
- skill: コード スメルを検出する
- skill: コード品質の自動テストを統合する
- skill: テスト中のコード カバレッジに関するレポート
- skill: 技術的負債を測定するツールを追加する
- skill: オープン ソースおよびその他のライセンスの問題を検出する
- skill: コンテナービルド戦略を実装する
learningPartnersLink: /learn/certifications/partners
locales:
- en
levels:
- advanced
roles:
- devops-engineer
products:
- azure
- azure-devops
- azure-kubernetes-service
- azure-container-instances
- azure-automation
exams:
- uid: exam.az-400
summary: |-
  このコースでは、継続的な統合の DevOps プラクティスを実装するための知識とスキルを提供します。学生は、Azure DevOps パイプラインで継続的統合を実装する方法、コード品質とセキュリティ原則を管理する方法、およびコンテナ構築戦略を実装する方法を学習します。

  #### 聴衆プロファイル
  このコースの学生は、DevOps の継続的な統合プロセス、または Microsoft Azure DevOps Solutions 認定資格試験に合格することに関心があります。
prerequisitesSection: |-
  - 学生は、Azure、バージョン管理、Agile ソフトウェア開発、およびコア ソフトウェア開発の原則に関する基本的な知識を持っている必要があります。ソフトウェアを提供する組織での経験があると役立ちます。
  - Azure ポータルの知識だけでなく、IDE での作業経験があることをお勧めします。ただし、これらのテクノロジの技術的背景を持たないかもしれないが、文化の変化としての DevOps の実践に興味がある学生は、継続的統合の手順および説明的な説明に従うことができるはずです。
outlineSection: |-
  ### モジュール 1&#58; Azure DevOps パイプラインでの継続的統合の実装
  このモジュールでは、利点、課題、ベスト プラクティスの構築、実装手順など、継続的な統合の原則を紹介します。また、ワークフロー、トリガー、エージェント、およびツールを使用したビルド戦略の実装についても学習します。
  #### レッスン
  - 継続的インテグレーションの概要
  - ビルド戦略の実装
  
  
  #### ラボ &#58; Azure Pipeline との継続的な統合の有効化

  #### ラボ &#58; Jenkins Build Job の作成と CI のトリガー 
  学生はこのモジュールの完了後、次のことが理解できるようになります&#58;
  - 継続的統合が重要である理由について説明できる
  - Azure DevOps を使用して継続的な統合を実装する


  ### モジュール 2&#58; コード品質とセキュリティ ポリシーの管理
  このモジュールでは、技術的負債、SonarCloud、およびその他のツール ソリューションを含むコード品質の管理方法を学習します。また、オープンソース、OWASP、および WhiteSource Bolt を使用してセキュリティ ポリシーを管理する方法も学習します。
  #### レッスン
  - コード品質の管理
  - セキュリティポリシーの管理


  #### ラボ &#58; Azure DevOpsとSonarCloudを使用した技術的負債の管理

  #### ラボ &#58; WhiteSource Bolt と Azure DevOps を使用した脆弱性の確認
  学生はこのモジュールの完了後、次のことができるようになります&#58;
  - 技術的負債 SonarCloud およびその他のツール ソリューションを含むコード品質を管理する。
  - オープンソース、OWASP、および WhiteSource Bolt を使用してセキュリティ ポリシーを管理する。
  - 技術的負債、SonarCloud およびその他のツール ソリューションを含むコード品質を管理する。


  ### モジュール 3&#58; コンテナ構築戦略の実装
  このモジュールでは、コンテナが仮想マシンとどのように異なるか、マイクロ サービスがどのようにコンテナを使用するかなど、コンテナ戦略を実装する方法を学びます。また、Docker を使用してコンテナを実装する方法も学習します。
  #### レッスン
  - コンテナ― ビルド戦略の実装


  #### ラボ &#58; Azure および Docker イメージを使用した既存の .NET アプリケーション
  学生はこのモジュールの完了後、次のことができるようになります&#58;
  - コンテナが仮想マシンとどのように異なるか、マイクロ サービスがどのようにコンテナを使用するかなど、コンテナ戦略を実装する。
  - Docker を使用してコンテナを実装する。

