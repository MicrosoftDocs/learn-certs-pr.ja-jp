### YamlMime:Course
title: Introduction to Programming Using Python
metadata:
  title: 'Course 55264-A: Introduction to Programming Using Python'
  description: 'Course 55264-A: Introduction to Programming Using Python'
uid: course.55264
courseNumber: '55264-A'
hoursToComplete: 120
iconUrl: /media/learn/certification/course.svg
skillsGained:
- skill: データ タイプとオペレーターを使用して操作を作成する
- skill: 制御フロー操作を作成する
- skill: 入出力操作を作成する
- skill: 特定の問題を解決するためのコードを記述して文書化する
- skill: 問題のトラブルシューティングとエラー処理操作の記述を行う
- skill: モジュールとツールを使用して操作を実行する
learningPartnersLink: /learn/certifications/partners
locales:
- en
levels:
- beginner
roles:
- developer
products:
- vs
exams:
- uid: exam.98-381
summary: |-
  この 5 日間のインストラクター主導のコースは、特定の問題を論理的に解決する Python コードの記述方法を学びたい学生を対象としています。受験者は、Python コードの記述、デバッグ、保守、および文書化の方法を学習します。この教材で、学生は Microsoft 認定資格試験 98-381 の準備を行います。

  #### 聴衆プロファイル
  このコースは、Python コードの記述方法とトラブルシューティング方法を学びたい、経験豊富な新規プログラマーを対象としています。これは、98-381 試験の準備用に Microsoft が推奨するコースです。プログラミング経験は必須ではありませんが、推奨されます。
prerequisitesSection: |-
  本コースに参加する前に、受講者は以下のような条件が必要です。
  - Windows、Linux、Mac コンピュータでコマンドライン操作を実行した経験
  - 任意のプログラミング言語でコードを記述した 6 か月の経験 (推奨)
outlineSection: |-
  ### モジュール 1&#58; データ型と演算子を使用して操作を実行する
  このモジュールでは、Python 演算子とデータ型を使用して、指定された結果を得る方法について説明します。
  #### レッスン
  - データ型を変数に割り当てる
  - データおよびデータ タイプ操作を実行する
  - 算術、比較、論理演算を実行する
  - レビュー


  #### ラボ&#58; データ型と演算子を使用して操作を実行する
  - データ型を変数に割り当てる
  - データおよびデータ タイプ操作を実行する
  - 算術、比較、論理演算を実行する

  本モジュールを終了すると、受講者は以下のことができるようになります&#58;
  - データ型を変数に割り当てる
  - データとデータ型の操作を管理する
  - 算術、比較、論理演算を実行する


  ### モジュール 2&#58; 決定とループによる制御フロー
  このモジュールでは、Python で制御フローとループ操作を使用する方法について説明します。
  #### レッスン
  - 枝分かれするステートメントを使用するコード セグメントを構築および分析する
  - 反復を実行するコード セグメントを構築および分析する
  - レビュー


  #### ラボ&#58; 決定とループによる制御フロー
  - 分岐操作の使用
  - 反復操作の使用

  本モジュールを終了すると、受講者は以下のことができるようになります&#58;
  - 分岐操作を作成する
  - 反復操作を使用する


  ### モジュール 3&#58; 入力および出力操作を実行する
  このモジュールでは、ファイルを使用して、またはコンソールから入出力操作を構築する方法について説明します。
  #### レッスン
  - ファイルの入出力操作を実行する Python コード セグメントを作成する
  - コンソールの入出力操作を実行する Python コード セグメントを作成する
  - レビュー


  #### ラボ&#58; 入力および出力操作を実行する
  - ファイルを使用して入出力操作を実行する
  - コンソールから入出力操作を実行する

  本モジュールを終了すると、受講者は以下のことができるようになります&#58;
  - 入出力操作にファイルを使用する
  - コンソールを使用して入出力操作を実行する


  ### モジュール 4&#58; コードを文書化および構築する
  このモジュールでは、適切に記述された Python コードを構造化および文書化する方法について説明します。
  #### レッスン
  - コード セグメントを構築および分析する
  - コメントとドキュメンテーション文字列を使用してコード セグメントを文書化する
  - レビュー


  #### ラボ&#58; コードを文書化および構築する
  - コード セグメントを構築および分析する
  - コード セグメントを文書化する

  本モジュールを終了すると、受講者は以下のことができるようになります&#58;
  - コード セグメントを作成する
  - コード セグメントを文書化する


  ### モジュール 5&#58; トラブルシューティングとエラー処理を実行する
  このモジュールでは、Python でトラブルシューティングおよびエラー処理操作を実行する方法について説明します。
  #### レッスン
  - エラーのあるコード セグメントを分析、検出、および修正する
  - 例外を処理するコード セグメントを分析および構築する
  - レビュー


  #### ラボ&#58; トラブルシューティングとエラー処理を実行する
  - エラーのあるコード セグメントを分析、検出、および修正する
  - 例外を処理するコード セグメントを分析および構築する

  本モジュールを終了すると、受講者は以下のことができるようになります&#58;
  - コードのエラーを検出して修正する
  - エラー処理コードを作成する


  ### モジュール 6&#58; モジュール とツールを使用して操作を実行する
  このモジュールでは、組み込みモジュールの使用方法について説明します。
  #### レッスン
  - 組み込みモジュールを使用して基本的な操作を実行する
  - 組み込みモジュールを使用して複雑な操作を実行する
  - レビュー


  #### ラボ&#58; モジュール とツールを使用して操作を実行する
  - 組み込みモジュールを使用して基本的な操作を実行する
  - 組み込みモジュールを使用して複雑な操作を実行する

  本モジュールを終了すると、受講者は以下のことができるようになります&#58;
  - 組み込みモジュールを使用して、オペレーティング システム、日付、および数学演算を実行する

  #### 追加の参照 
  次のリソースを確認して、このクラスの準備に役立ててください。
  - 試験 98-381 の Microsoft テスト目標

