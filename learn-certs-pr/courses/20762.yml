### YamlMime:Course
title: Developing SQL Databases
metadata:
  title: 'Course 20762-C: Developing SQL Databases'
  description: 'Course 20762-C: Developing SQL Databases'
uid: course.20762
courseNumber: '20762-C'
hoursToComplete: 120
iconUrl: /media/learn/certification/course.svg
skillsGained:
- skill: 表を設計および実装する。
- skill: 高度な表設計について説明する
- skill: 制約を通じてデータの整合性を確保する。
- skill: 最適化インデックスと列ストア インデックスを含むインデックスについて説明する
- skill: ビューを設計および実装する。
- skill: ストアド プロシージャを設計および実装する。
- skill: ユーザー定義関数を設計および実装する。
- skill: トリガーを使用してデータ操作に応答する。
- skill: インメモリ テーブルを設計および実装する。
- skill: SQL Server でマネージ コードを実装する。
- skill: XML データの保存およびクエリを実行する。
- skill: 空間データを操作する。
- skill: Blob とテキスト ドキュメントの保存とクエリを実行する。
learningPartnersLink: /learn/certifications/partners
locales:
- en
levels:
- advanced
roles:
- database-administrator
products:
- sql-server
exams:
- uid: exam.70-762
summary: |-
  この 5 日間のインストラクター主導のコースでは、Microsoft SQL Server データベースを開発するための知識とスキルを学生に提供します。このコースでは、データベースの開発に関連する SQL Server  製品の機能とツールの使用方法を個人に教えることに焦点を当てています。
  
  #### 聴衆プロファイル
  このコースの主な対象者は、データベースを実装するための SQL Server 製品の機能とテクノロジのスキルを身につけたいと考えている IT プロフェッショナルです。 

  このコースの 2 番目の対象者は、SQL Server データベースの実装のスキルを身につけたいと考えている他の製品プラットフォームの開発者である個人です。
prerequisitesSection: |-
  - Microsoft Windows オペレーティング システムとそのコア機能に関する基本的な知識。
  - Transact- SQL の実用的な知識。 
  - リレーショナル データベースの実用的な知識。
outlineSection: |-
  ### モジュール 1&#58; データベース開発の概要
  開発または管理ロールで Microsoft SQL Server の操作を開始する前に、SQL Server プラットフォームの範囲について理解することが重要です。特に、SQL Server は単なるデータベース エンジンではなく、エンタープライズ データを管理するための完全なプラットフォームであることについて理解しておくと役立ちます。

  SQL Server は、あらゆる規模の組織に強力なデータ プラットフォームを提供するだけでなく、開発を容易にし、より堅牢にする包括的なツールセットを提供します。
  #### レッスン
  - SQL Server プラットフォームの概要
  - SQL Server データベース開発のタスク

  本モジュールを終了すると、受講者は以下のことができるようになります&#58; 
  - SQL Server プラットフォームについて説明する。 
  - SQL Server 管理ツールを使用する。


  ### モジュール 2&#58; テーブルの設計と実装
  リレーショナル データベース管理システム (RDBMS)では、ユーザー データとシステム データがテーブルに格納されます。各テーブルは、エンティティについて説明する一連の行と、エンティティの属性を保持する一連の列で構成されます。たとえば、Customer テーブルには、CustomerName や CreditLimit などの列と、各顧客の行がある場合があります。Microsoft SQL Server では、データ管理ソフトウェアのテーブルは、オペレーティング システムのファイルを含むフォルダーと概念が非常によく似たスキーマ内に含まれています。テーブルの設計は、データベース開発者が行う最も重要なタスクの 1 つであり、テーブルを正しく設計しないと、データを効率的にクエリできなくなります。

  適切なデザインが作成されたら、デザインを正しく実装する方法を知ることが重要です。
  #### レッスン
  - テーブルの設計
  - データ型
  - スキーマの操作
  - テーブルの作成と変更


  #### ラボ&#58; テーブルの設計と実装
  - テーブルの設計
  - スキーマの作成
  - 表の作成

  本モジュールを終了すると、受講者は以下のことができるようになります&#58; 
  - 正規化、主キー、外部キーを使用して表を設計する。
  - ID 列を操作する。
  - 組み込みデータ型とユーザー データ型について理解する。
  - データベース設計でスキーマを使用して、データを整理し、オブジェクトのセキュリティを管理する。
  - 計算列およびテンポラル表を操作する。


  ### モジュール 3&#58; 高度な表設計
  データベースの物理設計は、利害関係者によって設定されたストレージとパフォーマンスの要件を満たすデータベースの能力に大きな影響を与える可能性があります。物理データベース実装の設計には、ファイル グループの計画、パーティショニングを使用して大きなテーブルを管理する方法、圧縮を使用してストレージとパフォーマンスを向上させることが含まれます。テンポラル テーブルは SQL Server の新機能であり、データへの変更を収集する簡単なソリューションを提供します。
  #### レッスン
  - データのパーティショニング
  - データの圧縮
  - テンポラル表


  #### ラボ&#58; 高度な表設計の使用
  - データのパーティショニング
  - データの圧縮

  本モジュールを終了すると、受講者は以下のことができるようになります&#58; 
  - SQL Server データベースでパーティション分割表を使用する際の考慮事項について説明する。
  - SQL Server データベースでのデータ圧縮の使用を計画する。
  - テンポラル表を使用して、データの変更を保存およびクエリする。


  ### モジュール 4&#58; 制約を通じたデータの整合性の確保
  データベース内のデータの品質は、それに依存するアプリケーションの有用性と有効性を大きく左右し、組織やビジネスベンチャーの成功または失敗は、それに依存する可能性があります。データの整合性を確保することは、高品質のデータを維持するための重要なステップです。

  最初のエントリまたはコレクションからストレージまで、アプリケーションのすべてのレベルでデータの整合性を適用する必要があります。Microsoft SQL Server データ管理ソフトウェアは、ジョブを簡素化するためのさまざまな機能を提供します。
  #### レッスン
  - データの整合性の強化
  - Data Domain Integrity の実装
  - エンティティと参照整合性の実装


  #### ラボ&#58; 制約によるデータ整合性の使用
  - 制約を追加
  - 制約をテストする

  本モジュールを終了すると、受講者は以下のことができるようになります&#58; 
  - データの整合性を適用するためのオプションと、それらを適用するレベルについて説明する。
  - チェック、一意、デフォルトの制約などのオプションを通じてドメインの整合性を実装する。
  - 主キーと外部キーの制約を通じて参照整合性を実装する。


  ### モジュール 5&#58; インデックスの概要
  インデックスは、テーブルに関連付けられたページのコレクションです。インデックスは、クエリのパフォーマンスを向上させるため、または一意性を適用するために使用されます。インデックスの実装を学ぶ前に、それらがどのように機能するか、インデックス内でさまざまなデータ型を使用する場合の効果、および複数の列からインデックスを構築する方法について理解しておくと役立ちます。このモジュールでは、インデックスを持たないテーブル構造と、Microsoft SQL Server で使用できるさまざまなインデックス タイプについて説明します。
  #### レッスン
  - コアインデックスの概念
  - データ型とインデックス
  - ヒープ、クラスター化、および非クラスター化インデックス
  - 単一列インデックスと複合インデックス


  #### ラボ&#58; インデックスの実装
  - ヒープの作成
  - クラスター化インデックスの作成
  - カバード インデックスの作成

  本モジュールを終了すると、受講者は以下のことができるようになります&#58; 
  - コア インデックスの概念について説明する。
  - 異なるデータ型に使用するインデックスを評価する。
  - 単一列と複合列のインデックスの違いについて説明する。


  ### モジュール 6&#58; 最適化インデックス戦略の設計
  インデックスは、SQL Server がデータベースからデータを迅速かつ効率的に取得できるようにする上で重要な役割を果たします。このモジュールでは、インデックス、INCLUDE 句、クエリ ヒント、パディングとフィル ファクター、統計、DMO の使用、データベース チューニング アドバイザー、クエリ ストアなど、高度なインデックス トピックについて説明します。
  #### レッスン
  - 戦略をインデックス化する
  - インデックスの管理
  - 計画を実行する
  - データベース エンジン チューニング アドバイザー
  - クエリストア


  #### ラボ&#58; インデックスの最適化
  - クエリストアの使用
  - ヒープとクラスター化インデックス
  - カバード インデックスの作成

  本モジュールを終了すると、受講者は以下のことができるようになります&#58; 
  - カバリング インデックスとは何か、いつ使用するか。
  - インデックスの管理に関する問題。
  - 実際および推定の実行計画。
  - データベース チューニング アドバイザーを使用してクエリのパフォーマンスを向上させる方法。
  - Query Store を使用してクエリのパフォーマンスを向上させる方法。


  ### モジュール 7&#58; コラムストアインデックス
  Microsoft SQL Server 2012 で導入された列ストア インデックスは、多くの組織で大規模なデータ ウェアハウス ソリューションで使用されています。このモジュールでは、大規模なデータセットでこれらのインデックスを使用する利点、SQL Server 2016 で列ストア インデックスに加えられた改善、およびソリューションで列ストア インデックスを効果的に使用するために必要な考慮事項について説明します。

  #### レッスン
  - 列ストア インデックスの概要
  - コラムストアインデックスの作成
  - コラムストアインデックスの操作


  #### ラボ &#58;  コラムストアインデックスの使用
  - 列ストア インデックスの作成
  - メモリ最適化された列ストアテーブルを作成する

  本モジュールを終了すると、受講者は以下のことができるようになります&#58; 
  - 列ストア インデックスについて説明し、その使用に適したシナリオを特定する。
  - クラスター化および非クラスター化列ストア インデックスを作成する。
  - 列ストア インデックスの使用に関する考慮事項について説明する。


  ### モジュール 8&#58; ビューの設計と実装
  このモジュールでは、ビューの設計と実装について説明します。ビューは特別なタイプのクエリであり、テーブルのように保存され、他のクエリで使用できます。ビューでは、クエリ定義のみがディスクに保存されます。結果セットではありません。結果セットもテーブルと同じようにディスクに格納される場合のインデックス付きビューであるという点が唯一の例外です。

  ビューは、抽象化の層を提供し、テーブル結合の複雑さを隠すことにより、データベースの設計を簡素化します。ビューは、基になるオブジェクトへのアクセス許可をユーザーに与えることなく、ビューを使用するアクセス許可をユーザーに与えることによってデータを保護する方法でもあります。これは、データを非公開にして、適切なユーザーだけが表示できることを意味します。
  #### レッスン
  - ビューの概要
  - ビューの作成と管理
  - ビューのパフォーマンスに関する考慮事項


  #### ラボ&#58; ビューの設計と実装
  - 標準ビューの作成
  - 更新可能なビューの作成

  本モジュールを終了すると、受講者は以下のことができるようになります&#58; 
  - データベース設計におけるビューのロールについて理解する。
  - ビューを作成および管理する。
  - ビューを使用してパフォーマンスに関する考慮事項について理解する。


  ### モジュール 9&#58; ストアドプロシージャの設計と実装
  このモジュールでは、ストアド プロシージャの設計と実装について説明します。
  #### レッスン
  - ストアドプロシージャの概要
  - ストアド プロシージャの操作
  - パラメータ化されたストアドプロシージャの実装
  - 実行コンテキストの制御


  #### ラボ&#58; ストアドプロシージャの設計と実装
  - ストアド プロシージャを作成する
  - パラメータ化されたストアド プロシージャを作成する
  - ストアド プロシージャ実行コンテキストの変更

  本モジュールを終了すると、受講者は以下のことができるようになります&#58; 
  - ストアド プロシージャとは何か、およびストアド プロシージャの利点について理解する。
  - ストアド プロシージャの設計、作成、および変更。
  - ストアド プロシージャの実行コンテキストを制御する。
  - パラメータを使用するストアド プロシージャを実装する。


  ### モジュール 10&#58; ユーザー定義関数の設計と実装
  関数は、頻繁に実行されるロジックをカプセル化するために使用するルーチンです。コードは多くの場所で関数ロジックを繰り返す必要がなく、関数を呼び出すことができます。これにより、コードの保守が容易になり、デバッグが容易になります。

  このモジュールでは、ビジネス ルールまたはデータの一貫性を強化するユーザー定義関数 (UDF) の設計と実装について学習します。また、既存の機能を変更および維持する方法についても学びます。
  #### レッスン
  - 関数の概要
  - スカラー関数の設計と実装
  - テーブル値関数の設計と実装
  - 関数の実装に関する考慮事項
  - 関数の代替


  #### ラボ&#58; ユーザー定義関数の設計と実装
  - 電話番号をフォーマット化する
  - 既存の関数を変更する

  本モジュールを終了すると、受講者は以下のことができるようになります&#58; 
  - さまざまな種類の機能について説明する。
  - スカラー関数を設計および実装する。
  - テーブル値関数 (TVF) を設計および実装する。
  - 関数の実装に関する考慮事項について説明する。
  - 関数の代替案を説明する。


  ### モジュール 11&#58; トリガーを使用したデータ操作への応答
  Data Manipulation Language (DML) トリガーは、ドメイン、エンティティ、参照データの整合性、およびビジネス ロジックを適用するために使用できる強力なツールです。整合性の強制は、信頼できるアプリケーションを構築するのに役立ちます。このモジュールでは、DML トリガーとは何か、データの整合性をどのように実施するか、使用可能なさまざまなタイプのトリガー、およびデータベースでそれらを定義する方法について学習します。


  #### レッスン
  - DML トリガーの設計
  - DML トリガーの実装
  - 高度なトリガーの概念


  #### ラボ&#58; トリガーを使用したデータ操作への応答
  - 監査トリガーを作成してテストする
  - 監査トリガーを改善する

  本モジュールを終了すると、受講者は以下のことができるようになります&#58; 
  - DML トリガーを設計する
  - DML トリガーを実装する
  - ネストや再帰などの高度な DML トリガーの概念について説明する。


  ### モジュール 12&#58; インメモリテーブルの使用
  インメモリ オンライン トランザクション処理 (OLTP) 機能が導入された Microsoft SQL Server 2014 データ管理ソフトウェアは、OLTP ワークロードのパフォーマンスを向上させる機能を備えています。SQL Server では、メモリ最適化テーブルを再作成せずに変更する機能など、いくつかの拡張機能が追加されています。メモリ最適化テーブルは、主にメモリに格納され、ハードディスクへのアクセスを減らすことでパフォーマンスを向上させます。

  ネイティブにコンパイルされたストアド プロシージャは、従来の解釈された Transact-SQL よりもパフォーマンスを向上させます。
  #### レッスン
  - メモリ最適化テーブル
  - ネイティブにコンパイルされたストアド プロシージャ


  #### ラボ&#58; インメモリ データベース機能の使用
  - メモリ最適化テーブルの使用
  - ネイティブにコンパイルされたストアド プロシージャの使用

  本モジュールを終了すると、受講者は以下のことができるようになります&#58;
  - メモリに最適化され表を使用して、ラッチにバインドされたワークロードのパフォーマンスを向上させる。
  - ネイティブにコンパイルされたストアド プロシージャを使用する。


  ### モジュール 13&#58; SQL Server でのマネージ コードの実装
  SQL Server の専門家として、ビジネス ニーズを満たすデータベースを作成するよう求められる場合があります。ほとんどの要件は、Transact-SQL を使用して満たすことができます。ただし、共通言語ランタイム (CLR) コードを使用することによってのみ満たされる追加機能が必要になる場合があります。

  新しいリリースごとに SQL Server に機能が追加されるため、マネージ コードを使用する必要性が減少します。ただし、集計、ストアド プロシージャ、トリガー、ユーザー定義関数、またはユーザー定義型を作成する必要がある場合があります。これらのオブジェクトの開発には、任意の .NET Framework 言語を使用できます。

  このモジュールでは、CLR マネージ コードを使用して SQL Server のユーザー定義データベース オブジェクトを作成する方法を学習します。
  #### レッスン
  - SQL Server での CLR 統合の概要
  - CLR アセンブリの実装と公開


  #### ラボ&#58; SQL Server でのマネージ コードの実装
  - 提案された CLR コードの評価
  - スカラー値の CLR 関数の作成
  - テーブル値の CLR 関数の作成

  本モジュールを終了すると、受講者は以下のことができるようになります&#58; 
  - SQL Server での CLR 統合の重要性について説明する。 
  - SQL Server データ ツール (SSDT) を使用して CLR アセンブリを実装および公開する。


  ### モジュール 14&#58; SQL Server での XML データの保存とクエリ
  XML は、機械可読形式でドキュメントをエンコードするためのルールを提供します。非構造化ドキュメントを送信するのではなく、データ構造を表すために広く採用された基準になりました。Microsoft SQL Server データ管理ソフトウェアを実行しているサーバーは、多くの場合、XML を使用して他のシステムとデータを交換する必要があり、多くの　SQL Server ツールは、XML ベースのインターフェイスを提供します。
  SQL Server　は、格納とクエリの両方で、XML　の広範な処理を提供します。このモジュールでは、XML を紹介し、SQL Server 内に XML データを格納する方法を示し、XML データをクエリする方法を示します。
  XML データを直接クエリする機能により、構造化クエリ言語 (SQL) クエリを実行する前にデータをリレーショナル形式に抽出する必要がなくなります。XML を効果的に処理するには、既存のリレーショナル データを XML として返す方法や、既に XML であるデータをクエリする方法など、いくつかの方法で XML データをクエリできる必要があります。
  #### レッスン
  - XML スキーマと XML スキーマの概要
  - SQL Server での XML データとスキーマの保存
  - XML データ型の実装
  - Transact-SQL FOR XML ステートメントの使用
  - Xquery の開始
  - XML のシュレッディング


  #### ラボ&#58; SQL Server での XML データの保存とクエリ
  - XML を使用するタイミングの決定
  - 変数での XML データ ストレージのテスト
  - XML スキーマの使用
  - FOR XML クエリの使用
  - XML を返すストアド プロシージャの作成

  本モジュールを終了すると、受講者は以下のことができるようになります&#58; 
  - XML および XML スキーマについて説明する。
  - SQL Server に XML データおよび関連する XML スキーマを保存する。
  - SQL Server 内に XML インデックスを実装する。
  - Transact-SQL FOR XML ステートメントを使用する。
  - 基本的な XQuery クエリを使用して作業する。


  ### モジュール 15&#58; SQL Server での空間データの保存とクエリ
  このモジュールでは、空間データと、このデータを SQL Server に実装する方法について説明します。
  #### レッスン
  - Spatial Data の概要
  - SQL Server Spatial Data Types の操作
  - アプリケーションでの Spatial Data の使用


  #### ラボ&#58; SQL Server Spatial Data の操作
  - Geometry データ タイプに慣れる
  - 既存のテーブルに空間データを追加する
  - 近くの場所を見つける

  本モジュールを終了すると、受講者は以下のことができるようになります&#58; 
  - SQL Server に空間データを格納する方法について説明する
  - GEOMETRY および GEOGRAPHY データ型の基本メソッドを使用する
  - 空間データを含むデータベースのクエリ


  ### モジュール 16&#58; SQL Server での BLOB とテキスト ドキュメントの保存とクエリ
  従来、データベースは、整数、日付、文字列などの単純な値の形式で情報を格納するために使用されており、ドキュメント、スプレッドシート、画像ファイル、動画ファイルなどのより複雑なデータ形式とは対照的です。データベースがサポートするシステムがより複雑になるにつれて、管理者はこのより複雑なファイル データをデータベース テーブルの構造化データと統合する必要があることに気づきました。たとえば、製品データベースでは、製品レコードをその製品のサービス マニュアルまたは説明動画に関連付けると役立ちます。SQL Server は、Binary Large Object (BLOB) と呼ばれることの多いこれらのファイルを統合し、それらのコンテンツにインデックスを付けて検索結果に含めることを可能にする方法をいくつか提供します。このモジュールでは、BLOB を含むデータベースを設計および最適化する方法を学びます。
  #### レッスン
  - BLOB データに関する考慮事項
  - FILESTREAM の操作
  - 全文検索の使用


  #### ラボ&#58; SQL Server での BLOB とテキスト ドキュメントの保存とクエリ
  - FILESTREAM 列の有効化と使用
  - ファイル テーブルの有効化と使用
  - 全文索引の使用

  本モジュールを終了すると、受講者は以下のことができるようになります&#58; 
  - BLOB データを組み込むデータベースを設計する際の考慮事項について説明する。
  - FILESTREAM を使用して BLOB データを Windows ファイル システムに格納することの利点と設計上の考慮事項について説明する。
  - フル テキスト インデックス作成とセマンティック検索を使用する利点について説明し、これらの機能を使用して非構造化データを含む SQL Server データを検索する方法について説明する


  ### モジュール 17&#58; SQL Server の並行性
  このモジュールでは、名前を付け、宣言し、値を割り当て、変数を使用する方法について説明します。また、配列にデータを格納する方法についても説明します。
  同時実行制御は、マルチ ユーザー データベース システムの重要な機能で、多くのユーザーが同時にデータを変更している場合でも、データの整合性を保つことができます。このモジュールでは、Microsoft SQL Server での同時実行性の実装について説明します。SQL Server が同時実行制御を実装する方法、および同時実行設定を構成して操作するさまざまな方法について学習します。

  #### レッスン
  - 並行性とトランザクション
  - 内部のロック


  #### ラボ&#58; SQL Server の並行性
  - スナップショット分離の実装
  - パーティション レベル ロックの実装

  本モジュールを終了すると、受講者は以下のことができるようになります&#58;
  - SQL Server の同時実行性とトランザクションについて説明する。
  - SQL Server のロックについて説明する。
  

  ### モジュール 18&#58; パフォーマンスとモニタリング
  このモジュールでは、名前を付け、宣言し、値を割り当て、変数を使用する方法について説明します。また、配列にデータを格納する方法についても説明します。
  このモジュールでは、SQL Server データベースのパフォーマンスを測定および監視する方法について説明します。最初の 2 つのレッスンでは、Microsoft SQL Server データベース エンジンに組み込まれた柔軟で軽量のイベント処理システムである SQL Server 拡張イベントについて説明します。これらのレッスンでは、アーキテクチャの概念、トラブルシューティング戦略、および使用シナリオに焦点を当てています。
  #### レッスン
  - 拡張イベント
  - 拡張イベントの操作
  - ライブ クエリ統計
  - データベース ファイル構成の最適化
  - 指標


  #### ラボ&#58; モニタリング、トレース、ベースライン
  - 拡張イベントを使用したデータの収集と分析
  - ベースライン方法論の実装

  本モジュールを終了すると、受講者は以下のことができるようになります&#58;
  - 拡張イベントとその使用方法を理解する。
  - 拡張イベントを操作する。
  - ライブ クエリ統計について理解する。
  - データベースのファイル構成を最適化する。
  - DMV とパフォーマンス モニターを使用して、ベースラインを作成し、パフォーマンス メトリックを収集する。

