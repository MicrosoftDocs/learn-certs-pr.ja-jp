### YamlMime:Course
title: 継続的デリバリーの実装
metadata:
  title: 'コース AZ-400T03-A: 継続的デリバリーの実装'
  description: 'コース AZ-400T03-A: 継続的デリバリーの実装'
uid: course.az-400t03
courseNumber: 'AZ-400T03-A'
hoursToComplete: 24
iconUrl: /media/learn/certification/course.svg
skillsGained:
- skill: リリースと展開を区別する
- skill: リリース パイプラインのコンポーネントを定義する
- skill: リリース戦略を設計する際に考慮すべき事項について説明する
- skill: リリースとリリース プロセスを分類し、両方の品質を管理する方法の概要を説明する
- skill: リリース ゲートの原則と、リリース ノートとドキュメントの処理方法を説明する
- skill: 伝統的な意味と現代的な意味の両方で、展開パターンを説明する
- skill: リリース管理ツールを選択する
- skill: Azure DevOps　およびその他のリリース管理ツールで使用される用語を説明する
- skill: Build および Release タスクとは何か、何ができるか、利用可能な展開タスクを説明する
- skill: Agenet、Agent Queue、および Agent Pool を分類する
- skill: 1 つのリリース パイプラインで複数のリリースジョブが必要になることがある理由を説明する
- skill: マルチ エージェントとマルチ構成のリリース ジョブを区別する
- skill: リリース パイプラインでリリース変数とステージ変数を使用する
- skill: サービス接続を使用して安全に環境に展開する
- skill: パイプラインにテストを埋め込む
- skill: アラート、サービス フック、およびレポートを使用して、パイプラインの状態を確認し、リリースするさまざまな方法をリストする。
- skill: リリース ゲートを作成する
- skill: 展開パターンの説明
- skill: Blue Green デプロイメントを実装する
- skill: Canary Release の実装
- skill: Progressive Exposure デプロイメントを実装する
learningPartnersLink: https://www.microsoft.com/ja-jp/learning/partners.aspx
locales:
- en
levels:
- advanced
roles:
- devops-engineer
products:
- azure
- azure-devops
- azure-kubernetes-service
- azure-container-instances
- azure-automation
exams:
- uid: exam.az-400
summary: |-
  このコースは、継続的な配信を実装するための知識とスキルを提供します。学生は、リリース戦略の設計方法、リリース管理ワークフローの設定方法、適切な展開パターンの実装方法を学びます。
  #### 聴衆プロファイル
  このコースの学生は、DevOps プロセスを実装するか、Microsoft Azure DevOps Solutions 認定資格試験に合格することに興味があります。
prerequisitesSection: |-
  Azure、バージョン管理、Agile ソフトウェア開発、およびコア ソフトウェア開発の原則に関する基本的な知識。ソフトウェアを提供する組織での経験があると役立ちます。
outlineSection: |-
  ### モジュール 1&#58; リリース戦略を設計する
  #### レッスン
  - Continuous Delivery の概要
  - 戦略の推奨事項をリリースする
  - High Quality Release パイプラインの構築
  - 展開パターンの選択
  - 適切なリリース管理ツールの選択
  
  
  #### ラボ &#58; リリース戦略の構築
  学生はこのモジュールの完了後、次のことができるようになります&#58;
  - リリースと展開を区別する
  - リリース パイプラインのコンポーネントを定義する
  - リリース戦略を設計する際に考慮すべき事項について説明する
  - リリースとリリース プロセスを分類し、両方の品質を管理する方法の概要を説明する
  - リリース ゲートの原則と、リリース ノートとドキュメントの処理方法を説明する
  - 伝統的な意味と現代的な意味の両方で、展開パターンを説明する
  - リリース管理ツールを選択する


  ### モジュール 2&#58; リリース管理ワークフローを設定する
  #### レッスン
  - リリース パイプラインを作成する
  - 環境をプロビジョニングし、設定する
  - タスクとテンプレートを管理およびモジュール化する
  - 機密事項をリリース パイプラインと統合する
  - 自動統合および機能テスト自動化の構成
  - Health の検査を自動化する


  #### ラボ &#58; Terraform および Azure Pipeline を使用したクラウドでのインフラストラクチャ展開の自動化

  #### ラボ &#58; Azure Key Vault を使用したパイプラインにおける秘密の設定

  #### ラボ &#58; 負荷テストの設定と実行

  #### ラボ &#58; 機能テストの設定と実行

  #### ラボ &#58; リリース ゲートとしての Azure Monitor の使用

  #### ラボ &#58; リリース ダッシュボードの作成
  学生はこのモジュールの完了後、次のことができるようになります&#58;
  - Azure DevOps　およびその他のリリース管理ツールで使用される用語を説明する
  - Build および Release タスクとは何か、何ができるか、利用可能な展開タスクを説明する
  - sgent、Agent Queue、および Agent Pool を分類する
  - 1 つのリリース パイプラインで複数のリリースジョブが必要になることがある理由を説明する
  - マルチ エージェントとマルチ構成のリリース ジョブを区別する
  - リリース パイプラインでリリース変数とステージ変数を使用する
  - サービス接続を使用して安全に環境に展開する
  - パイプラインにテストを埋め込む
  - アラート、サービス フック、およびレポートを使用して、パイプラインの状態を確認し、リリースするさまざまな方法をリストする。
  - リリース ゲートを作成する


  ### モジュール 3&#58; 適切な展開パターンを実装する
  #### レッスン
  - 展開パターンの概要
  - Blue Green デプロイメントを実装する
  - 機能の切り替え
  - Canary Releases
  - ダーク ローンチ
  - AB テスト
  - Progressive Exposure デプロイメント


  #### ラボ &#58; ブルー グリーン展開

  #### ラボ &#58; トラフィック マネージャー
  学生はこのモジュールの完了後、次のことができるようになります&#58;
  - 展開パターンの説明
  - Blue Green デプロイメントを実装する
  - Canary Release の実装
  - Progressive Exposure デプロイメントを実装する