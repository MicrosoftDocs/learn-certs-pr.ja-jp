### YamlMime:Course
title: Advanced Python
metadata:
  title: 'Course 55285-A: Advanced Python'
  description: 'Course 55285-A: Advanced Python'
uid: course.55285
courseNumber: '55285-A'
hoursToComplete: 48
iconUrl: /media/learn/certification/course.svg
skillsGained:
- skill: コレクションモジュールの操作。
- skill: マッピングとフィルタリング、およびラムダ関数の理解。
- skill: 高度な並べ替えの実行。
- skill: Pythonで正規表現の操作。
- skill: データベース、CSVファイル、JSON、およびXMLの操作。
- skill: Pythonでオブジェクト指向コードの記述。
- skill: Pythonコードをテストしてデバッグ。
learningPartnersLink: /learn/certifications/partners
locales:
- en
levels:
- advanced
roles:
- developer
summary: |-
  このPythonトレーニングコースでは、Pythonプログラミングに既に精通している受講者が高度なPythonテクニックを学びます。
  この高度なPythonコースは、Python 3を使用して教えられています。ただし、Python2とPython 3の違いに注意してください。プライベートPythonクラスの場合、インストラクターは必要に応じてPython 2に特に焦点を当てることができます。

  #### オーディエンスプロフィール
  無し
prerequisitesSection: |-
  このPythonクラスには、次の経験が必要です&#58;
  - 基本的なPythonプログラミングの経験。特に、下記については非常にスムーズである必要があります&#58;
    1. 文字列の操作。
    2. リスト、タプル、および辞書の操作。
    3. ループと条件。
    4. 独自の関数の作成。

  以下の経験は、このPythonクラスに役立ちます&#58;
  - HTML、XML、JSON、およびSQLへのある程度のエクスポージャー。

outlineSection: |-
  ### モジュール 1&#58; 高度なPythonの概念
  このレッスンでは、一般的に使用されているが、理解するためにPythonの強固な基盤が必要なPythonの機能と手法について学習します。

  #### レッスン
  - ラムダ関数
  - 高度なリスト内包表記
  - コレクションモジュール
  - マッピングとフィルタリング
  - 可変および不変の組み込みオブジェクト
  - 並べ替え
  - 関数呼び出しでシーケンスの解凍


  #### ラボ&#58; このレッスンの演習
  - ローリングファイブダイス
  - defaultdictの作成
  - OrderedDictの作成
  - カウンターの作成
  - 両端キューでの作業
  - list.sort()をsorted(iterable)に変換
  - 文字列をdatetime.dateオブジェクトに変換

  このモジュールを完了すると、受講者は次のことができるようになります。&#58;
  - ラムダ関数の操作。
  - より高度なリスト内包表記の記述。
  - コレクションモジュールと連携して、名前付きタプル、defaultdicts、ordereddicts、カウンター、デキューの作成
  - マッピングとフィルタリングの使用。
  - シーケンスの並べ替え。
  - 関数呼び出しでシーケンスの解凍。
  - モジュールとパッケージの作成。


  ### モジュール 2&#58; データの操作
  データはさまざまな場所にさまざまな方法で保存されます。最も一般的な方法すべてに対応するPythonモジュールがあります。

  #### レッスン
  - リレーショナルデータベース
  - CSV
  - ウェブからデータの取得
  - JSON


  #### ラボ&#58; このレッスンの演習
  - SQLiteデータベースのクエリ
  - データベースへのファイルデータの挿入
  - CSVファイル内のデータの比較
  - リクエストと美しいスープ
  - JSONを使用したコースデータの印刷

  このモジュールを完了すると、受講者は次のことができるようになります。&#58;

  - リレーショナルデータベースに保存されているデータにアクセスして操作。
  - CSVファイルに保存されているデータにアクセスして操作。
  - ウェブページからデータの取得。
  - HTMLおよびXMLとして保存されたデータにアクセスして操作。
  - APIにアクセス。
  - JSONとして保存されたデータにアクセスして操作。


  ### モジュール 3&#58; テストとデバッグ
  このモジュールでは、Pythonを使用してテストおよびデバッグする方法についてご説明します。 
  #### レッスン
  - パフォーマンスのテスト
  - ユニットテストモジュール


  #### ラボ&#58; このレッスンの演習
  - 修正機能

  このモジュールを完了すると、受講者は次のことができるようになります。&#58;

  - タイマーとtimeitモジュールを使用してパフォーマンスのテスト。
  - unittestモジュールを使用して単体テストの作成。


  ### モジュール 4&#58; クラスとオブジェクト
  オブジェクトとは、属性や動作、あるいはその両方を持つものです。つまり、特定の方法で特定のことを実行します。現実の世界では、すべてがオブジェクトと見なされる可能性があります。岩、木、テニスラケット、テニスプレーヤーなど、いくつかのオブジェクトは有形です。また、単語、色、テニススイング、テニスの試合など、無形のオブジェクトもあります。

  #### レッスン
  - 属性
  - 行動
  - クラスとオブジェクト
  - 属性とメソッド
  - プライベート属性
  - プロパティ
  - クラスの文書化
  - 継承
  - 静的メソッド
  - クラスの属性とメソッド
  - 抽象クラスとメソッド
  - デコレータの理解


  #### ラボ&#58; このレッスンの演習
  - roll()メソッドをDieに追加
  - プロパティ
  - ダイクラスの文書化
  - ダイクラスへの拡張
  - roll()メソッドの拡張

  このモジュールを完了すると、受講者は次のことができるようになります。&#58;

  - Pythonでクラスとオブジェクトの作成。
  - インスタンスメソッド、クラスメソッド、および静的メソッドの記述。
  - プロパティの定義。
  - 継承を使用してサブクラスの作成。
  - 抽象クラスの作成します。
  - Pythonクラスを適切に文書化。
  - デコレータがどのように機能するかの理解。

  #### 追加資料
  無し