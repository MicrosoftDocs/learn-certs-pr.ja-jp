### YamlMime:Course
title: Querying Microsoft SQL Server® 2014
metadata:
  title: 'Course 20461-D: Querying Microsoft SQL Server® 2014'
  description: 'Course 20461-D: Querying Microsoft SQL Server® 2014'
uid: course.20461
courseNumber: '20461-D'
hoursToComplete: 120
iconUrl: /media/learn/certification/course.svg
skillsGained:
- skill: Microsoft SQL Server 2014 の基本的なアーキテクチャと概念について説明します。
- skill: Transact-SQL と他のコンピューター言語の類似点と相違点について理解します。
- skill: SELECT クエリを作成する
- skill: 複数の表をクエリする
- skill: データの並べ替えとフィルタリング
- skill: SQL Server におけるデータ型の使用について説明する
- skill: Transact-SQL を使用してデータを変更する
- skill: 組み込み関数を使用する
- skill: データのグループ化と集計
- skill: サブクエリを使用する
- skill: テーブル式を使用する
- skill: セット演算子を使用する
- skill: ウィンドウのランキング、オフセット、集計関数を使用する
- skill: ピボットおよびグループ化セットを実装する
- skill: ストアド プロシージャを実行する
- skill: T-SQL を使用したプログラム
- skill: エラー処理を実装する
- skill: トランザクションを実装する
learningPartnersLink: /learn/certifications/partners
locales:
- en
levels:
- advanced
roles:
- database-administrator
products:
- sql-server
exams:
- uid: exam.70-461
summary: |-
  この 5 日間のインストラクター主導コースでは、Microsoft SQL Server 2014 の基本的な Transact-SQL クエリを作成するために必要な技術スキルを学生に提供します。このコースは、データベース管理、データベース開発、ビジネス インテリジェンスなど、SQL Server 関連のすべての分野の基礎です。このコースの主な目的は、試験 「70-461&#58; Writing Queries Using Microsoft® SQL Server® 2014 Transact-SQL」 の準備です。この試験は、データベース管理、データベース開発、ビジネス インテリジェンスなど、SQL Server 関連のすべての分野の基礎試験になります。したがって、このコースの主な対象者は、データベース管理者、データベース開発者、および BI プロフェッショナルです。

  注&#58; 本コースは、 SQL Server 2012 または SQL Server 2014 の学習に関心のあるお客様を対象としています。ここでは、SQL Server 2014 の新機能だけでなく、 SQL Server データプラットフォーム全体の重要な機能についても説明します。

  #### 視聴者プロフィール
  このコースは、データベース管理者、データベース開発者、およびビジネス インテリジェンスの専門家を対象としています。このコースは、レポート作成者、ビジネス アナリスト、およびクライアント アプリケーション開発者など、必ずしもデータベースに重点を置いていたり、試験を受ける予定がない SQL パワー ユーザーなども参加する可能性があります。
prerequisitesSection: |-
  - リレーショナル データベースの実用的な知識。
  - Microsoft Windows オペレーティング システムとそのコア機能に関する基本的な知識。
outlineSection: |-
  ### モジュール 1&#58; Microsoft SQL Server 2014 入門
  このモジュールでは、SQL Server プラットフォームと主要なツールを紹介します。エディション、バージョン、クエリに使用されるツール、ドキュメント ソース、およびデータベースの論理構造について説明します。
  #### レッスン
  - SQL Server の基本アーキテクチャ
  - SQL Server のエディションとバージョン
  - SQL Server Management Studio の概要


  #### ラボ&#58; SQL Server 2014 ツールの操作
  本モジュールを終了すると、受講者は以下のことができるようになります&#58;
  - SQL Server 2012 のアーキテクチャとエディションについて説明する。
  - SQL Server Management Studio を操作する。


  ### モジュール 2&#58; T-SQL クエリ入門
  このモジュールでは、SQL Server の主要なクエリ言語として Transact SQL を紹介します。T-SQL クエリの基本構造、SELECT ステートメントの論理フローについて説明し、述語やセットベースの操作などの概念を紹介します。
  #### レッスン
  - T-SQL の紹介
  - セットについて
  - 述語論理を理解する
  - SELECT ステートメントの操作の論理的な順序を理解する


  ### ラボ&#58; Transact-SQL クエリ入門
  本モジュールを終了すると、受講者は以下のことができるようになります&#58;
  - T-SQL の要素とクエリの記述における T-SQL のロールについて説明する
  - SQL Server でのセットの使用について説明する
  - SQL Server での述語ロジックの使用について説明する
  - SELECT ステートメントでの操作の論理的な順序について説明する


  ### モジュール 3&#58; SELECT クエリの作成
  このモジュールでは、単一の表に対するクエリに焦点を当てて、SELECT ステートメントの基本を紹介します。
  #### レッスン
  - 単純な SELECT ステートメントの作成
  - DISTINCT で重複を排除する
  - 列と表のエイリアスの使用
  - 簡単な CASE 式を記述する。


  #### ラボ&#58; 基本的な SELECT ステートメントの記述
  本モジュールを終了すると、受講者は以下のことができるようになります&#58;
  - 単純な SELECT ステートメントを記述する。
  - DISTINCT 句を使用して重複を排除する。
  - 列と表のエイリアスを使用する。
  - 簡単な CASE 式を記述する。


  ### モジュール 4&#58; 複数の表のクエリ
  このモジュールでは、SQL Server の複数のソースからのデータを組み合わせるクエリを作成する方法について説明します。このモジュールでは、複数の表からデータを取得するメカニズムとして、T-SQL クエリでの JOIN の使用を紹介しています。
  #### レッスン
  - 結合について
  - 内部結合を使用したクエリ
  - 外部結合を使用したクエリ
  - クロス結合と自己結合を使用したクエリ


  #### ラボ&#58; 複数の表のクエリ
  本モジュールを終了すると、受講者は以下のことができるようになります&#58;
  - 結合を使用して SELECT ステートメントで複数の表をクエリする方法について説明する。
  - 内部結合を使用するクエリを記述する。
  - 外部結合を使用するクエリを記述する。
  - 自己結合とクロス結合を使用するクエリを記述する。


  ### モジュール 5&#58; データのソートとフィルタリング
  このモジュールでは、クエリを拡張して返される行を制限し、行が表示される順序を制御する方法について説明します。このモジュールでは、不足している結果や不明な結果を解決する方法についても説明します。
  #### レッスン
  - データの並べ替え
  - 述語によるデータのフィルタリング
  - TOP および OFFSET-FETCH によるフィルタリング
  - 不明な値の操作


  #### ラボ&#58; データのソートとフィルタリング
  本モジュールを終了すると、受講者は以下のことができるようになります&#58;
  - WHERE 句の述語でデータをフィルタリングする。
  - ORDER BY を使用してデータをソートする。
  - SELECT 句のデータを TOP でフィルタリングする。
  - OFFSET と FETCH でデータをフィルタリングする。


  ### モジュール 6&#58; SQL Server 2014 データ型の操作
  このモジュールでは、SQL Server がデータを格納するために使用するデータ型について説明します。多くのタイプの数値および特殊用途のデータ型を紹介しています。また、データ型間の変換、および型の優先順位の重要性についても説明します。
  #### レッスン
  - SQL Server 2014 データ型の紹介
  - 文字データの操作
  - 日付と時刻データの操作


  #### ラボ&#58; SQL Server 2014 データ型の操作
  本モジュールを終了すると、受講者は以下のことができるようになります&#58;
  - 数値データ型、型の優先順位、型変換について説明する。
  - 文字データ型を使用してクエリを記述する。
  - 日付と時刻のデータ型を使用してクエリを記述する。


  ### モジュール 7&#58; DML によるデータの変更
  このモジュールでは、データの挿入、更新、削除を実行するための Transact-SQ Lデータ操作言語の使用について説明します。
  #### レッスン
  - データの挿入
  - データの変更と削除


  #### ラボ&#58; DML によるデータの変更
  本モジュールを終了すると、受講者は以下のことができるようになります&#58;
  - 新しいデータを表に挿入する。
  - 表の既存のレコードを更新および削除する。


  ### モジュール 8&#58; 組み込み関数の使用
  このモジュールでは、SQL Server Denali に組み込まれている関数の使用法を紹介し、データ型変換、論理結果のテスト、null になる可能性などの一般的な使用法について説明します。
  #### レッスン
  - 組み込み関数を使用したクエリの記述
  - 変換関数の使用
  - 論理関数の使用
  - 関数を使用して NULL を処理する


  #### ラボ&#58; 組み込み関数の使用
  本モジュールを終了すると、受講者は以下のことができるようになります&#58;
  - 組み込みスカラー関数を使用してクエリを記述する。
  - 変換関数を使用する。
  - 論理関数を使用する。
  - NULL で機能する関数を使用する。


  ### モジュール 9&#58; データのグループ化と集計
  このモジュールでは、クエリ内でデータをグループ化し、グループ化されたデータを集約し、HAVING でグループをフィルタリングする方法を紹介します。このモジュールは、SELECT 句が GROUP BY 句の列の命名に制限を課している理由と、SELECT 句にリストできる列を学生が理解できるように設計されています。
  #### レッスン
  - 集計関数の使用
  - GROUP BY 句の使用
  - HAVING によるグループのフィルタリング


  #### ラボ&#58; データのグループ化と集計
  本モジュールを終了すると、受講者は以下のことができるようになります&#58;
  - 組み込みの集計関数を使用してデータを要約するクエリを記述する。
  - GROUP BY 句を使用して、行をグループに配置する。
  - HAVING 句を使用して、検索条件に基づいてグループを除外する。


  ### モジュール 10&#58; サブクエリの使用
  このモジュールでは、SELECT ステートメントのさまざまな部分でサブクエリを使用する方法を紹介します。これには、スカラー サブクエリと複数結果サブクエリの使用、および IN 演算子と EXISTS 演算子の使用が含まれます。
  #### レッスン
  - 自己完結型サブクエリの作成
  - 相関サブクエリの作成
  - サブクエリでの EXISTS 述語の使用


  #### ラボ&#58; サブクエリの使用
  本モジュールを終了すると、受講者は以下のことができるようになります&#58;
  - 他のクエリ内にネストされているクエリの使用法を説明する。
  - スカラーまたは多値の結果を返す自己完結型のサブクエリを記述する。
  - スカラーまたは多値の結果を返す相関サブクエリを記述する。
  - EXISTS 述語を使用して、サブクエリ内の行の存在を効率的にチェックする。


  ### モジュール 11&#58; テーブル式の使用
  このモジュールでは、通常クエリでさらに使用するために、有効なリレーショナル テーブルを返す T-SQL 式を紹介します。このモジュールでは、ビュー、派生テーブル、共通テーブル式、およびインライン テーブル値関数について説明します。
  #### レッスン
  - ビューの使用
  - インライン表値関数の使用
  - 派生表の使用
  - 共通表式の使用


  #### ラボ&#58; テーブル式の使用
  本モジュールを終了すると、受講者は以下のことができるようになります&#58;
  - 派生表を使用するクエリを記述する。
  - 共通の表式を使用するクエリを記述する。
  - 単純なビューを作成し、それらに対してクエリを記述する。
  - 単純なインライン表値関数を作成し、それらに対してクエリを記述する。


  ### モジュール 12&#58; 集合演算子の使用
  このモジュールでは、2 つの入力セット間の行を比較するためのセット演算子 UNION、INTERSECT、および EXCEPT を紹介します
  #### レッスン
  - UNION 演算子を使用したクエリの記述
  - EXCEPT および INTERSECT の使用
  - APPLY の使用


  #### ラボ&#58; 集合演算子の使用
  本モジュールを終了すると、受講者は以下のことができるようになります&#58;
  - UNION 演算子を使用してデータを組み合わせるクエリを作成する
  - INTERSECT および EXCEPT 演算子を使用してセットを比較するクエリを記述する
  - 派生表または関数の結果で APPLY を使用して、表の行を操作するクエリを作成する


  ### モジュール 13&#58; ウィンドウのランキング、オフセット、および集計関数の使用
  このモジュールでは、ランキング、集計、オフセット関数などのウィンドウ関数を紹介します。この機能の多くは SQL Server 2012 の新機能です。ROW_NUMBER、RANK、DENSE_RANK、NTILE、LAG、LEAD、FIRST_VALUE、LAST_VALUE などの T-SQL 関数を使用して、行のセットまたはウィンドウに対して計算を実行する方法について説明します。
  #### レッスン
  - OVER でウィンドウを作成する
  - ウィンドウ関数の探索


  #### ラボ&#58; ウィンドウのランキング、オフセット、および集計関数の使用
  本モジュールを終了すると、受講者は以下のことができるようになります&#58;
  - ウィンドウ関数を使用する利点を説明する。
  - ウィンドウ関数を、パーティションやフレームを含む、OVER 句で定義された行に制限する。
  - ウィンドウ関数を使用して行のウィンドウを操作し、ランキング、集計、オフセット比較の結果を返すクエリを記述する。


  ### モジュール 14&#58; セットのピボットとグループ化
  このモジュールでは、T-SQL でデータをピボットする方法について説明し、GROUPING SETS 句の基本を紹介します。また、SQL Server での GROUP BY ROLLUP および GROUP BY CUBE 構文の使用についても説明します。
  #### レッスン
  - PIVOT および UNPIVOT を使用したクエリの記述
  - グループ化セットの操作


  #### ラボ&#58; セットのピボットとグループ化
  本モジュールを終了すると、受講者は以下のことができるようになります&#58;
  - 結果セットをピボットおよびアンピボットするクエリを記述する。
  - グループ化セットを使用して複数のグループ化を指定するクエリを記述する。


  ###モジュール15&#58; ストアド プロシージャによるデータのクエリ
  このモジュールでは、T-SQL クエリ環境での既存のストアドプロシージャの使用を紹介します。EXECUTE の使用、入力および出力パラメータをプロシージャに渡す方法、システム ストアド プロシージャを呼び出す方法について説明します。
  #### レッスン
  - PIVOT および UNPIVOT を使用したクエリの記述
  - ストアド プロシージャにパラメーターを渡す
  - 単純なストアド プロシージャの作成
  - Dynamic SQL の操作


  #### ラボ&#58; ストアド プロシージャの実行
  本モジュールを終了すると、受講者は以下のことができるようになります&#58;
  - ストアド プロシージャを実行して結果を返す。
  - パラメータをプロシージャに渡す。
  - SELECT ステートメントをカプセル化する単純なストアド プロシージャを作成する。
  - EXEC および sp_executesql を使用して動的 SQL を構築および実行する。


  ### モジュール 16&#58; T-SQL を使用したプログラミング
  このモジュールでは、T-SQL プログラミングの概念とオブジェクトの基本を紹介します。バッチ、変数、ループや条件などのフロー要素の制御、動的 SQL ステートメントを作成して実行する方法、および同義語の使用方法について説明します。
  #### レッスン
  - T-SQL プログラミング要素
  - プログラム フローの制御


  ### ラボ&#58; T-SQL を使用したプログラミング
  本モジュールを終了すると、受講者は以下のことができるようになります&#58;
  - 単純なプログラミング タスクに使用される T-SQL の言語要素について説明する。
  - バッチと、それらが SQL Server によってどのように処理されるかについて説明する。
  - 変数と類義語を宣言して割り当てる。
  - IF ブロックと WHILE ブロックを使用してプログラム フローを制御する。


  ### モジュール 17&#58; エラー処理の実装
  このモジュールでは、T-SQL コードでのエラー ハンドラーの使用を紹介します。コンパイル エラーとランタイム エラーの違いを紹介し、エラーがバッチにどのように影響するかについて説明します。また、このモジュールでは TRY/CATCH ブロックを使用してエラー処理を制御する方法、関数の ERROR クラスの使用、および新しい THROW ステートメントの使用についても説明します。
  #### レッスン
  - TRY/CATCH ブロックの使用
  - エラー情報の操作


  #### ラボ&#58; エラー処理の実装
  本モジュールを終了すると、受講者は以下のことができるようになります&#58;
  - T-SQL コードでエラーが発生したときの SQL Server の動作について説明する。
  - T-SQL で構造化例外処理を実装する。
  - システム オブジェクトからのエラーに関する情報を返する。
  - ユーザー定義のエラーを発生させ、T-SQL コードでシステム エラーを渡する。


  ### モジュール 18&#58; トランザクションの実装
  このモジュールでは、SQL Server でのトランザクション管理の概念を紹介します。トランザクション プロパティの高レベルの概要を提供し、BEGIN、COMMIT、ROLLBACK を使用したトランザクションのマーキングの基本について説明します。
  #### レッスン
  - トランザクションとデータベース エンジン
  - トランザクションの制御


  #### ラボ&#58; トランザクションの実装
  本モジュールを終了すると、受講者は以下のことができるようになります&#58;
  - トランザクションと、バッチとトランザクションの違いを説明する。
  - バッチと、それらが SQL Server によってどのように処理されるかについて説明する。
  - トランザクション制御言語ステートメントを使用してトランザクションを作成および管理する。
  - SET XACT_ABORT を使用して、SQL Server による TRY/CATCH ブロック外のトランザクションの処理を定義する。
  - トランザクションに対する分離レベルの影響について説明する。


  ### モジュール 19&#58; 別添 1&#58; クエリのパフォーマンスの向上
  このモジュールでは、パフォーマンスの高いクエリを作成するためのいくつかの重要なガイドラインと、クエリの実行および Microsoft SQL Server への影響を監視する方法を示します。
  #### レッスン
  - クエリ パフォーマンスの要因
  - クエリ パフォーマンス データの表示


  #### ラボ&#58; クエリのパフォーマンスの向上
  本モジュールを終了すると、受講者は以下のことができるようになります&#58;
  - パフォーマンスの高いクエリのコンポーネントについて説明する。
  - 基本的なクエリ パフォーマンス データの表示と解釈


  ### モジュール 20&#58; 別添 2&#58; SQL Server メタデータのクエリ
  SQL Server は、システム カタログ ビュー、システム関数、動的管理オブジェクト、システム ストアド プロシージャなどのさまざまなメカニズムを使用して、構造化メタデータへのアクセスを提供します。このモジュールでは、これらのメカニズムを使用してシステム メタデータを返すクエリを作成する方法を学びます。
  #### レッスン
  - システム カタログ ビューと関数のクエリ
  - システム ストアド プロシージャの実行
  - 動的管理オブジェクトのクエリ


  #### ラボ&#58; SQL Server メタデータのクエリ
  本モジュールを終了すると、受講者は以下のことができるようになります&#58;
  - システムビューと関数を使用してシステム メタデータを取得するクエリを記述する。
  - システム ストアド プロシージャを実行して、システム情報を返す。
  - システムの動的管理ビューと機能を使用して、システム メタデータと状態情報を取得するクエリを記述する。

